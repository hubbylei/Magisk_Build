name: Build Magisk

on:
  workflow_dispatch:
  repository_dispatch:
    types: [ Source Code Update ]

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      REPO_URL: https://github.com/topjohnwu/Magisk.git
      REPO_BRANCH: master
      SCCACHE_DIRECT: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Clone source code
        run: |
          rm -rf .git
          git clone --single-branch --depth 1 --recurse-submodules -b $REPO_BRANCH $REPO_URL $GITHUB_WORKSPACE/Magisk
          cp -rf $GITHUB_WORKSPACE/Magisk/* $GITHUB_WORKSPACE/

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          is-asset-build: true

      - name: Build App
        id: compile
        run: |
          python build.py -vr all
          python build.py -v all
          echo "status=success" >> "$GITHUB_OUTPUT"

      - name: Stop gradle daemon
        run: ./gradlew --stop

      - name: Sign APK
        if: steps.compile.outputs.status == 'success'
        run: |
          chmod a+x ./signer/zipalign
          chmod a+x ./signer/apksigner
          apks=$(find Magisk/out -name '*.apk')
          for apk in $apks
          do
            echo "Sign $apk"
            ./signer/zipalign -v 4 $apk $apk.signed > /dev/null
            rm -rf $apk
            mv $apk.signed $apk
            ./signer/apksigner sign --cert Magisk.x509.pem --key Magisk.pk8 $apk
            rm -rf $apk.idsig
          done

      - name: Generate tag
        id: tag
        if: steps.compile.outputs.status == 'success'
        run: |
          echo "release_tag=$(git rev-parse HEAD | cut -c 1-8)" >> "$GITHUB_OUTPUT"
          echo "release_body=$(grep "magisk.versionCode" gradle.properties | awk -F "=" '{print $2}')-$(grep "magisk.stubVersion" gradle.properties | awk -F "=" '{print $2}')" >> "$GITHUB_OUTPUT"
          echo "status=success" >> "$GITHUB_OUTPUT"

      - name: Make Notes
        if: steps.tag.outputs.status == 'success'
        run: |
          ver=$(echo ${{ steps.tag.outputs.release_body }} | awk -F "-" '{print $1}')
          echo "## Magisk (${{ steps.tag.outputs.release_tag }}) (${ver})" > ./out/notes.md
          json=$(curl -sL -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/topjohnwu/Magisk/commits | jq .)
          jsha=$(echo $json | jq .[].sha | sed 's/\"//g')
          hsha=$(curl -sL -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/hubbylei/Magisk-Files/commits | jq .[0].commit.message | sed 's/\"//g' | awk -F "-" '{print $1}')
          sha=()
          i=0
          for s in $jsha
          do
            sha[$i]=$(echo $s | cut -c 1-8)
            i=$(($i+1))
          done
          for ((i=0;i <${#sha[@]};i++))
          do
            if [ ${sha[$i]} == $hsha ];then
                break
            fi
            echo "- "$(echo $json | jq .[$i].commit.message | sed 's/\\n/<br>/g' | sed 's/\"//g') >> ./out/notes.md
          done

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        if: steps.tag.outputs.status == 'success' && !cancelled()
        with:
          name: ${{ steps.tag.outputs.release_tag }}(${{ steps.tag.outputs.release_body }})
          path: out

      - name: Upload To File Host
        uses: hubbylei/github-action-push-to-another-repository@main
        if: steps.tag.outputs.status == 'success'
        env:
          API_TOKEN_GITHUB: ${{ secrets.MAGISK_BUILD_CHECK }}
        with:
          source-directory: 'out'
          destination-github-username: 'hubbylei'
          destination-repository-name: 'Magisk-Files'
          user-email: ${{ secrets.UESR_EMAIL }}
          commit-message: ${{ steps.tag.outputs.release_tag }}-${{ steps.tag.outputs.release_body }}
          target-branch: master

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1
